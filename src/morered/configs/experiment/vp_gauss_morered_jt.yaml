# @package _global_

defaults:
  - vp_gauss_ddpm
  - override /sampler: morered_jt

run:
  experiment: vp_gauss_morered_jt

globals:
  time_output_key: t_pred

model:
  output_modules:
    - _target_: morered.model.heads.DiffusionTime
      n_in: ${globals.n_atom_basis}
      n_hidden: null
      n_layers: 3
      output_key: ${globals.time_output_key}
      aggregation_mode: null
      detach_representation: False
    - _target_: morered.model.heads.TimeAwareEquivariant
      n_in: ${globals.n_atom_basis}
      n_hidden: null
      n_layers: 3
      output_key: ${globals.noise_output_key}
      include_time: True
      time_head: ${model.output_modules.0}
      detach_time_head: False
      time_key: ${globals.time_output_key}

task:
  outputs:
    - _target_: schnetpack.task.ModelOutput
      name: ${globals.time_output_key}
      target_property: ${globals.time_target_key}
      loss_fn:
        _target_: torch.nn.MSELoss
      metrics:
        mse:
          _target_: torchmetrics.regression.MeanSquaredError
          squared: True
      loss_weight: 0.1
    - _target_: morered.task.DiffModelOutput
      name: ${globals.noise_output_key}
      target_property: ${globals.noise_target_key}
      loss_fn:
        _target_: torch.nn.MSELoss
      metrics:
        mse:
          _target_: torchmetrics.regression.MeanSquaredError
          squared: True
      loss_weight: 0.9
      nll_metric: null

sampler:
  denoiser: null

callbacks:
  sampling:
    t: null
    max_steps: 2000

  # denoising:
  #   _target_: morered.callbacks.SamplerCallback
  #   sampler: ${sampler}
  #   name: denoising
  #   t: 150
  #   max_steps: 1000
  #   sample_prior: True
  #   store_path: denoised
  #   every_n_batchs: 1
  #   every_n_epochs: 200
  #   start_epoch: 1
  #   log_rmsd: True
  #   log_validity: True
  #   bonds_data_path: null
